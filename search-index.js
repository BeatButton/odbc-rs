var searchIndex = {};
searchIndex["cfg_if"] = {"doc":"A macro for defining #[cfg] if-else statements.","items":[[14,"cfg_if","cfg_if","",null,null]],"paths":[]};
searchIndex["log"] = {"doc":"A lightweight logging facade.","items":[[3,"LogRecord","log","The \"payload\" of a log message.",null,null],[3,"LogMetadata","","Metadata about a log message.",null,null],[3,"LogLocation","","The location of a log message.",null,null],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level filter.",null,null],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called.",null,null],[3,"ShutdownLoggerError","","The type returned by `shutdown_logger_raw` if `shutdown_logger_raw` has already been called or if `set_logger_raw` has not been called yet.",null,null],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework",null,null],[13,"Error","","The \"error\" level.",0,null],[13,"Warn","","The \"warn\" level.",0,null],[13,"Info","","The \"info\" level.",0,null],[13,"Debug","","The \"debug\" level.",0,null],[13,"Trace","","The \"trace\" level.",0,null],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging framework.",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"max_log_level","","Returns the current maximum log level.",null,{"inputs":[],"output":{"name":"loglevelfilter"}}],[5,"set_logger","","Sets the global logger.",null,{"inputs":[{"name":"m"}],"output":{"generics":["setloggererror"],"name":"result"}}],[5,"set_logger_raw","","Sets the global logger from a raw pointer.",null,{"inputs":[{"name":"m"}],"output":{"generics":["setloggererror"],"name":"result"}}],[5,"shutdown_logger","","Shuts down the global logger.",null,{"inputs":[],"output":{"generics":["box","shutdownloggererror"],"name":"result"}}],[5,"shutdown_logger_raw","","Shuts down the global logger.",null,{"inputs":[],"output":{"generics":["shutdownloggererror"],"name":"result"}}],[8,"Log","","A trait encapsulating the operations required of a logger",null,null],[10,"enabled","","Determines if a log message with the specified metadata would be logged.",2,{"inputs":[{"name":"self"},{"name":"logmetadata"}],"output":{"name":"bool"}}],[10,"log","","Logs the `LogRecord`.",2,{"inputs":[{"name":"self"},{"name":"logrecord"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"loglevel"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"loglevel"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"loglevelfilter"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"loglevel"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"loglevelfilter"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"loglevel"}],"output":{"name":"ordering"}}],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"generics":["loglevel"],"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"max","","Returns the most verbose logging level.",0,{"inputs":[],"output":{"name":"loglevel"}}],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,{"inputs":[{"name":"self"}],"output":{"name":"loglevelfilter"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"loglevelfilter"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"loglevelfilter"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"loglevel"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"loglevelfilter"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"loglevel"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"loglevelfilter"}],"output":{"name":"ordering"}}],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"generics":["loglevelfilter"],"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"max","","Returns the most verbose logging level filter.",1,{"inputs":[],"output":{"name":"loglevelfilter"}}],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",1,{"inputs":[{"name":"self"}],"output":{"generics":["loglevel"],"name":"option"}}],[11,"args","","The message body.",3,{"inputs":[{"name":"self"}],"output":{"name":"arguments"}}],[11,"metadata","","Metadata about the log directive.",3,{"inputs":[{"name":"self"}],"output":{"name":"logmetadata"}}],[11,"location","","The location of the log directive.",3,{"inputs":[{"name":"self"}],"output":{"name":"loglocation"}}],[11,"level","","The verbosity level of the message.",3,{"inputs":[{"name":"self"}],"output":{"name":"loglevel"}}],[11,"target","","The name of the target of the directive.",3,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"level","","The verbosity level of the message.",4,{"inputs":[{"name":"self"}],"output":{"name":"loglevel"}}],[11,"target","","The name of the target of the directive.",4,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"loglocation"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"module_path","","The module path of the message.",5,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"file","","The source file containing the message.",5,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"line","","The line containing the message.",5,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get","","Gets the current maximum log level filter.",6,{"inputs":[{"name":"self"}],"output":{"name":"loglevelfilter"}}],[11,"set","","Sets the maximum log level.",6,{"inputs":[{"name":"self"},{"name":"loglevelfilter"}],"output":null}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",7,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",8,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in that module will be logged.",null,null]],"paths":[[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"LogMetadata"],[3,"LogLocation"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"],[3,"ShutdownLoggerError"]]};
searchIndex["odbc"] = {"doc":"ODBC Open Database Connectivity or short ODBC is a low level high performance interface introduced by Microsoft to access relational data stores. This crate wraps the raw C interface and is intended to be usable in safe and idiomatic Rust.","items":[[3,"DiagnosticRecord","odbc","ODBC Diagnostic Record",null,null],[3,"DataSourceInfo","","Holds name and description of a datasource",null,null],[12,"server_name","","Name of the data source",0,null],[12,"driver","","Description of the data source",0,null],[3,"DriverInfo","","Struct holding information available on a driver.",null,null],[12,"description","","Name of the odbc driver",1,null],[12,"attributes","","List of attributes of the odbc driver",1,null],[3,"Environment","","Handle to an ODBC Environment",null,null],[3,"Connection","","Represents a connection to an ODBC data source",null,null],[3,"Statement","","A `Statement` can be used to execute queries and retrieves results.",null,null],[3,"Cursor","","Used to retrieve data from the fields of a query result",null,null],[3,"ColumnDescriptor","","",null,null],[12,"name","","",2,null],[12,"data_type","","",2,null],[12,"column_size","","",2,null],[12,"decimal_digits","","",2,null],[12,"nullable","","",2,null],[4,"Allocated","","`Statement` state used to represent a freshly allocated connection",null,null],[4,"Prepared","","`Statement` state used to represent a statement compiled into an access plan. A statement will enter this state after a call to `Statement::prepared`",null,null],[4,"HasResult","","`Statement` state used to represent a statement with a result set cursor. A statement is most likely to enter this state after a `SELECT` query.",null,null],[4,"NoResult","","`Statement` state used to represent a statement with no result set. A statement is likely to enter this state after executing e.g. a `CREATE TABLE` statement",null,null],[4,"ResultSetState","","Holds a `Statement` after execution of a query.Allocated",null,null],[13,"Data","","",3,null],[13,"NoData","","",3,null],[5,"create_environment_v3","","Creates an ODBC Environment and declares specifaciton of version 3.0 are used",null,{"inputs":[],"output":{"generics":["environment","option"],"name":"result"}}],[0,"ffi","","Reexport odbc-sys as ffi",null,null],[11,"get_raw_state","","get raw state string data.",4,null],[11,"get_raw_message","","get raw diagnostics message for avoiding encoding error.",4,null],[11,"get_native_error","","get native odbc error number",4,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",4,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",4,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"datasourceinfo"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"datasourceinfo"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"datasourceinfo"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"driverinfo"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"driverinfo"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"driverinfo"}],"output":{"name":"bool"}}],[11,"drivers","","Stores all driver description and attributes in a Vec",5,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"result"}}],[11,"data_sources","","Stores all data source server names and descriptions in a Vec",5,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"result"}}],[11,"system_data_sources","","Stores all sytem data source server names and descriptions in a Vec",5,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"result"}}],[11,"user_data_sources","","Stores all user data source server names and descriptions in a Vec",5,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"result"}}],[11,"handle","","",5,{"inputs":[{"name":"self"}],"output":{"name":"sqlhenv"}}],[11,"new","","Creates an ODBC Environment and declares specifaciton of `V` are used. You can use the shorthand `create_environment_v3()` instead.",5,{"inputs":[],"output":{"generics":["environment","option"],"name":"result"}}],[11,"handle","","",5,{"inputs":[{"name":"self"}],"output":{"name":"sqlhandle"}}],[11,"handle","","",6,{"inputs":[{"name":"self"}],"output":{"name":"sqlhdbc"}}],[11,"connect","","Connects to an ODBC data source",5,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":{"generics":["connection"],"name":"result"}}],[11,"connect_with_connection_string","","Connects to an ODBC data source using a connection string",5,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["connection"],"name":"result"}}],[11,"is_read_only","","`true` if the data source is set to READ ONLY mode, `false` otherwise.",6,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"result"}}],[11,"disconnect","","Closes the connection to the data source. If not called explicitly the disconnect will be invoked implicitly by `drop()`",6,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"handle","","",6,{"inputs":[{"name":"self"}],"output":{"name":"sqlhandle"}}],[11,"bind_parameter","","Binds a parameter to a parameter marker in an SQL statement.",7,{"inputs":[{"name":"self"},{"name":"u16"},{"name":"t"}],"output":{"generics":["statement"],"name":"result"}}],[11,"reset_parameters","","Releasing all parameter buffers set by `bind_parameter`. This method consumes the statement and returns a new one those lifetime is no longer limited by the buffers bound.",7,{"inputs":[{"name":"self"}],"output":{"generics":["statement"],"name":"result"}}],[11,"prepare","","Prepares a statement for execution. Executing a prepared statement is faster than directly executing an unprepared statement, since it is already compiled into an Access Plan. This makes preparing statement a good idea if you want to repeatedly execute a query with a different set of parameters and care about performance.",7,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["statement"],"name":"result"}}],[11,"num_result_cols","","The number of columns in a result set",7,{"inputs":[{"name":"self"}],"output":{"generics":["i16"],"name":"result"}}],[11,"describe_col","","Returns description struct for result set column with a given index. Note: indexing is starting from 1.",7,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"generics":["columndescriptor"],"name":"result"}}],[11,"execute","","Executes a prepared statement.",7,{"inputs":[{"name":"self"}],"output":{"generics":["resultsetstate"],"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"columndescriptor"}}],[11,"handle","","",7,{"inputs":[{"name":"self"}],"output":{"name":"sqlhstmt"}}],[11,"with_parent","","",7,{"inputs":[{"name":"connection"}],"output":{"name":"result"}}],[11,"tables","","",7,{"inputs":[{"name":"self"}],"output":{"generics":["statement"],"name":"result"}}],[11,"exec_direct","","Executes a preparable statement, using the current values of the parameter marker variables if any parameters exist in the statement.",7,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["resultsetstate"],"name":"result"}}],[11,"num_result_cols","","The number of columns in a result set",7,{"inputs":[{"name":"self"}],"output":{"generics":["i16"],"name":"result"}}],[11,"describe_col","","Returns description struct for result set column with a given index. Note: indexing is starting from 1.",7,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"generics":["columndescriptor"],"name":"result"}}],[11,"fetch","","Fetches the next rowset of data from the result set and returns data for all bound columns.",7,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"result"}}],[11,"close_cursor","","Call this method to reuse the statement to execute another query.",7,{"inputs":[{"name":"self"}],"output":{"generics":["statement"],"name":"result"}}],[11,"get_data","","Retrieves data for a single column in the result set",8,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"generics":["option"],"name":"result"}}],[11,"handle","","",7,{"inputs":[{"name":"self"}],"output":{"name":"sqlhandle"}}],[6,"Result","","Result type returned by most functions in this crate",null,null],[6,"Version3","","Environment state used to represent that environment has been set to odbc version 3",null,null],[6,"Executed","","`Statement` state used to represent a statement with a result set cursor. A statement is most likely to enter this state after a `SELECT` query.",null,null],[8,"GetDiagRec","","Allows retriving a diagnostic record, describing errors (or lack thereof) during the last operation.",null,null],[10,"get_diag_rec","","Retrieves a diagnostic record",9,{"inputs":[{"name":"self"},{"name":"i16"}],"output":{"generics":["diagnosticrecord"],"name":"option"}}],[8,"Output","","Indicates that a type can be retrieved using `Cursor::get_data`",null,null],[10,"get_data","","",10,{"inputs":[{"name":"raii"},{"name":"u16"},{"name":"vec"}],"output":{"generics":["option"],"name":"return"}}],[8,"OdbcType","","",null,null],[10,"sql_data_type","","",11,{"inputs":[],"output":{"name":"sqldatatype"}}],[10,"c_data_type","","",11,{"inputs":[],"output":{"name":"sqlcdatatype"}}],[10,"convert","","",11,null],[10,"column_size","","",11,{"inputs":[{"name":"self"}],"output":{"name":"sqlulen"}}],[10,"value_ptr","","",11,{"inputs":[{"name":"self"}],"output":{"name":"sqlpointer"}}],[11,"decimal_digits","","",11,{"inputs":[{"name":"self"}],"output":{"name":"sqlsmallint"}}],[8,"Handle","","Reflects the ability of a type to expose a valid handle",null,null],[16,"To","","",12,null],[10,"handle","","Returns a valid handle to the odbc type.",12,null],[11,"decimal_digits","","",11,{"inputs":[{"name":"self"}],"output":{"name":"sqlsmallint"}}]],"paths":[[3,"DataSourceInfo"],[3,"DriverInfo"],[3,"ColumnDescriptor"],[4,"ResultSetState"],[3,"DiagnosticRecord"],[3,"Environment"],[3,"Connection"],[3,"Statement"],[3,"Cursor"],[8,"GetDiagRec"],[8,"Output"],[8,"OdbcType"],[8,"Handle"]]};
searchIndex["odbc_safe"] = {"doc":"A crate for writing odbc clients in safe Rust","items":[[3,"DataSource","odbc_safe","A `DataSource` is used to query and manipulate a data source.",null,null],[3,"Unconnected","","An `HDbc` with the additional invariant of being 'allocated', but not 'connected'.",null,null],[3,"Connected","","An `HDbc` with the additional invariant of being 'connected'.",null,null],[3,"DiagResult","","Result of `Diagnostics::diagnostics`",null,null],[12,"state","","A five-character SQLSTATE code (and terminating NULL) for the diagnostic record `rec_number`. The first two characters indicate the class; the next three indicate the subclass. For more information, see [SQLSTATE][1]s. [1]: https://docs.microsoft.com/sql/odbc/reference/develop-app/sqlstates",0,null],[12,"native_error","","Native error code specific to the data source.",0,null],[12,"text_length","","The total number of characters (excluding the terminating NULL) available to return in `message_text`.",0,null],[3,"Environment","","An `Environment` is a global context, in which to access data.",null,null],[3,"Statement","","A `Statement` is most easily thought of as an SQL statement, such as `SELECT * FROM Employee`.",null,null],[3,"NoVersion","","Used to indicate that the ODBC environments version is not yet declared",null,null],[3,"Odbc3","","Used to declare ODBC 3 specifications.",null,null],[3,"Odbc3m8","","Used to declare ODBC 3.8 specifications.",null,null],[4,"DataType","","Describes a column or parameter type.",null,null],[13,"Char","","Fixed sized single byte character data",1,null],[13,"Numeric","","Exact numerical, with (Precision, Scale)",1,null],[13,"Decimal","","Exact numerical, with (Precision, Scale)",1,null],[13,"Integer","","Integer numerical with precision 10",1,null],[13,"SmallInt","","Small integer numerical with precision 5",1,null],[13,"Float","","Approximate numerical with precision 15",1,null],[13,"Real","","Approximate numerical with precison 7",1,null],[13,"Double","","Approximate numerical with precision 15",1,null],[13,"Varchar","","Variadic sized single byte character data",1,null],[4,"Indicator","","Used to indicate the required target buffer length.",null,null],[13,"Length","","The length required to hold all the data.",2,null],[13,"NoTotal","","Driver does not know how much data is available.",2,null],[13,"Null","","The value to be retrieved is NULL.",2,null],[4,"Return","","Holds result and indicates the overall success or failure of a function.",null,null],[13,"Success","","The function has been executed successfully. Holds result.",3,null],[13,"Info","","The function has been executed successfully. There have been warnings. Holds result.",3,null],[13,"Error","","An error occured.",3,null],[4,"ReturnOption","","Holds result and indicates the overall success or failure of a function.",null,null],[13,"Success","","The function has been executed successfully. Holds result.",4,null],[13,"Info","","The function has been executed successfully. There have been warnings. Holds result.",4,null],[13,"NoData","","No more data was available",4,null],[13,"Error","","An error occured.",4,null],[4,"NoCursor","","State used by `Statement`. A statement is likely to enter this state after executing e.g. a `CREATE TABLE` statement.",null,null],[4,"Open","","Cursor state of `Statement`. A statement is likely to enter this state after executing e.g a `SELECT` query.",null,null],[4,"Positioned","","Cursor state of `Statement`. A statement will enter this state after a successful call to `fetch()`",null,null],[4,"Unprepared","","State used by `Statement`. Indicates that no Access Plan has been created, yet.",null,null],[4,"Prepared","","State used by `Statement`. A statement will enter this state after a successful call to `prepare()`.",null,null],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"noversion"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"odbc3"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"odbc3m8"}}],[11,"constant","","",6,{"inputs":[],"output":{"name":"odbcversion"}}],[11,"constant","","",7,{"inputs":[],"output":{"name":"odbcversion"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"map","","Maps a `Return<T,E>` to `Return<U,E>` by applying a function to a contained `Success` or `Info` value, leaving an `Error` value untouched.",3,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"return"}}],[11,"map_error","","Maps a `Return<T,E>` to `Result<T,U>` by applying a function to a contained `Error value, leaving a`Success`or an`Info` value untouched.",3,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"return"}}],[11,"unwrap","","Unwraps the result, yielding the content of `Success` or `Info`",3,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"success","","Transforms the `Return<T,E>` into a `Result<T,U>`, mapping `Success(v) | Info(v)` to `Ok(v)` and `Error(err)` to `Err(err.into())`.",3,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"from","","",3,{"inputs":[{"name":"sqlreturn"}],"output":{"name":"return"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"map","","Maps a `ReturnOption<T,E>` to `ReturnOption<U,E>` by applying a function to a contained `Success` or `Info` value, leaving an `Error` or `NoData` value untouched.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"returnoption"}}],[11,"from","","",4,{"inputs":[{"name":"sqlreturn"}],"output":{"name":"returnoption"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"diagresult"}}],[11,"diagnostics","","",3,null],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_raw","","Provides access to the raw ODBC environment handle.",8,{"inputs":[{"name":"self"}],"output":{"name":"sqlhenv"}}],[11,"data_sources","","Fills buffers with information about the available datasources",8,null],[11,"drivers","","Fills buffers with information about the available datasources",8,null],[11,"new","","Allocates a new `Environment`",8,{"inputs":[],"output":{"name":"return"}}],[11,"declare_version","","Before an application allocates a connection which specification it follows. Currently these bindings only support ODBC 3.x.",8,{"inputs":[{"name":"self"}],"output":{"generics":["environment","environment"],"name":"return"}}],[11,"declare_version_3_8","","Before an application allocates a connection which specification it follows. Currently these bindings only support ODBC 3.x.",8,{"inputs":[{"name":"self"}],"output":{"generics":["environment","environment"],"name":"return"}}],[11,"declare_version_3","","Before an application allocates a connection which specification it follows. Currently these bindings only support ODBC 3.x.",8,{"inputs":[{"name":"self"}],"output":{"generics":["environment","environment"],"name":"return"}}],[11,"diagnostics","","",8,null],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",9,{"inputs":[{"name":"self"}],"output":null}],[11,"into_hdbc","","Releases inner Connection Handle without calling disconnect.",9,{"inputs":[{"name":"self"}],"output":{"name":"hdbc"}}],[11,"deref","","",9,null],[11,"deref_mut","","",9,null],[11,"into_hdbc","","",9,{"inputs":[{"name":"self"}],"output":{"name":"hdbc"}}],[11,"from_hdbc","","",9,null],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",10,null],[11,"deref_mut","","",10,null],[11,"into_hdbc","","",10,{"inputs":[{"name":"self"}],"output":{"name":"hdbc"}}],[11,"from_hdbc","","",10,null],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"into_raw","","Consumes the `DataSource`, returning the wrapped raw `SQLHDBC`",11,{"inputs":[{"name":"self"}],"output":{"name":"sqlhdbc"}}],[11,"as_raw","","Provides access to the raw ODBC Connection Handle",11,{"inputs":[{"name":"self"}],"output":{"name":"sqlhdbc"}}],[11,"from_raw","","May only be invoked with a valid Statement Handle which has been allocated using `SQLAllocHandle`. Special care must be taken that the Connection Handle passed is in a State which matches the type.",11,{"inputs":[{"name":"sqlhdbc"}],"output":{"name":"self"}}],[11,"with_parent","","Allocates a new `DataSource`. A `DataSource` may not outlive its parent `Environment`.",11,{"inputs":[{"name":"environment"}],"output":{"name":"return"}}],[11,"connect","","Establishes connections to a driver and a data source. The connection handle references storage of all information about the connection to the data source, including status, transaction state, and error information.",11,{"inputs":[{"name":"self"},{"name":"dsn"},{"name":"u"},{"name":"p"}],"output":{"generics":["connection","datasource"],"name":"return"}}],[11,"connect_with_connection_string","","Connects to a data source using a connection string.",11,{"inputs":[{"name":"self"},{"name":"c"}],"output":{"generics":["connection"],"name":"return"}}],[11,"diagnostics","","",11,null],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_raw","","Provides access to the raw ODBC Statement Handle",12,{"inputs":[{"name":"self"}],"output":{"name":"sqlhstmt"}}],[11,"bind_input_parameter","","Binds a parameter to a parameter marker in an SQL Statement",12,{"inputs":[{"name":"self"},{"name":"sqlusmallint"},{"name":"datatype"},{"name":"option"}],"output":{"generics":["statement"],"name":"return"}}],[11,"bind_col","","Binds a buffer and an indicator to a column.",12,{"inputs":[{"name":"self"},{"name":"sqlusmallint"},{"name":"t"},{"name":"sqllen"}],"output":{"generics":["statement"],"name":"return"}}],[11,"reset_parameters","","Unbinds the parameters from the parameter markers",12,{"inputs":[{"name":"self"}],"output":{"name":"statement"}}],[11,"reset_columns","","Unbinds column buffers from result set.",12,{"inputs":[{"name":"self"}],"output":{"name":"statement"}}],[11,"num_result_cols","","Returns the number of columns of the result set",12,{"inputs":[{"name":"self"}],"output":{"generics":["sqlsmallint"],"name":"return"}}],[11,"fetch","","Advances Cursor to next row",12,{"inputs":[{"name":"self"}],"output":{"generics":["statement","statement"],"name":"returnoption"}}],[11,"close_cursor","","Closes the cursor. Cursors only need to be closed explicitly if the Statement handle is intended to be reused, but a result set is not consumed.",12,{"inputs":[{"name":"self"}],"output":{"generics":["statement","statement"],"name":"return"}}],[11,"describe_col","","Return information about result set column",12,{"inputs":[{"name":"self"},{"name":"sqlusmallint"},{"name":"t"},{"name":"sqlsmallint"},{"name":"nullable"}],"output":{"generics":["option"],"name":"return"}}],[11,"with_parent","","Allocates a new `Statement`",12,{"inputs":[{"name":"connection"}],"output":{"name":"return"}}],[11,"prepare","","Prepares a `Statement` for execution by creating an Access Plan.",12,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["statement","statement"],"name":"return"}}],[11,"exec_direct","","Executes a preparable statement, using the current values of the parametr marker variables.",12,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["resultset","statement"],"name":"returnoption"}}],[11,"describe_col","","Return information about result set column",12,{"inputs":[{"name":"self"},{"name":"sqlusmallint"},{"name":"t"},{"name":"sqlsmallint"},{"name":"nullable"}],"output":{"generics":["option"],"name":"return"}}],[11,"execute","","Executes a prepared statement, using the current values fo the parameter marker variables if any parameter markers exist in the statement.",12,{"inputs":[{"name":"self"}],"output":{"generics":["resultset"],"name":"returnoption"}}],[11,"get_data","","Retrieves data for a single column or output parameter.",12,{"inputs":[{"name":"self"},{"name":"sqlusmallint"},{"name":"t"}],"output":{"generics":["indicator"],"name":"returnoption"}}],[11,"diagnostics","","",12,null],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"indicator"}}],[11,"from","","",2,{"inputs":[{"name":"sqllen"}],"output":{"name":"indicator"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"datatype"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"datatype"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"datatype"}],"output":{"name":"bool"}}],[11,"new","","Creates a `DataType` from a triplet. If the data_type does not require the information `column_size` or `decimal_digits`.",1,{"inputs":[{"name":"sqldatatype"},{"name":"sqlulen"},{"name":"sqlsmallint"}],"output":{"generics":["datatype"],"name":"option"}}],[11,"sql_data_type","","See [SQL Data Types][1] [1]: https://docs.microsoft.com/sql/odbc/reference/appendixes/sql-data-types",1,{"inputs":[{"name":"self"}],"output":{"name":"sqldatatype"}}],[11,"column_size","","See [Column Size][1] [1]: https://docs.microsoft.com/sql/odbc/reference/appendixes/column-size",1,{"inputs":[{"name":"self"}],"output":{"name":"sqlulen"}}],[11,"decimal_digits","","See [Decimal Digits][1] [1]: https://docs.microsoft.com/sql/odbc/reference/appendixes/decimal-digits",1,{"inputs":[{"name":"self"}],"output":{"name":"sqlsmallint"}}],[6,"Connection","","`Connection` can be used as a shorthand for a `DataSource` in `Connected` state.",null,null],[6,"ResultSet","","Shorthand for `Statements` in `Open` state.",null,null],[8,"CDataType","","See [C Data Types in ODBC][1] [1]: https://docs.microsoft.com/sql/odbc/reference/develop-app/c-data-types-in-odbc",null,null],[10,"c_data_type","","C Data type of the buffer returned by `mut_sql_ptr()`.",18,{"inputs":[],"output":{"name":"sqlcdatatype"}}],[10,"sql_ptr","","Const sql pointer",18,null],[10,"mut_sql_ptr","","Pointer to the buffer in which should be filled with data.",18,{"inputs":[{"name":"self"}],"output":{"name":"sqlpointer"}}],[10,"buffer_len","","Length of the buffer returned by `mut_sql_ptr()` in bytes.",18,{"inputs":[{"name":"self"}],"output":{"name":"sqllen"}}],[8,"HDbcWrapper","","Implemented by `Connected` and `Unconnected`.",null,null],[16,"Handle","","Type to a handle, which also must implement this trait.",19,null],[10,"into_hdbc","","Release ownership of the internal Connection Handle",19,{"inputs":[{"name":"self"}],"output":{"name":"hdbc"}}],[10,"from_hdbc","","Construction from a Connection Handle",19,null],[8,"Diagnostics","","A type implementing this trait is able to provide diagnostic information regarding the last method call.",null,null],[10,"diagnostics","","Returns the current values of multiple fields of a diagnostic record that contains error,  warning, and status information.",20,null],[8,"Handle","","Basic functionality for all wrappers around ODBC Handles",null,null],[18,"HANDLE_TYPE","","Used to identify the type of the handle in various functions of the ODBC C interface",21,null],[10,"handle","","Returns a ptr to the wrapped ODBC Object",21,{"inputs":[{"name":"self"}],"output":{"name":"sqlhandle"}}],[8,"SqlStr","","A type implementing this trait can be passed as a string argument in API calls",null,null],[10,"as_text_ptr","","Returns a pointer to the start of the string",22,null],[10,"text_length","","Returns buffer length or SQL_NTS",22,{"inputs":[{"name":"self"}],"output":{"name":"sqlsmallint"}}],[10,"text_length_int","","Returns buffer length or SQL_NTSL",22,{"inputs":[{"name":"self"}],"output":{"name":"sqlinteger"}}],[8,"CursorState","","Implemented by the `Open` and `Positioned` states for `Statement`.",null,null],[8,"Version","","Type indicates an ODBC Version",null,null],[10,"constant","","The `SQL_ATTR_ODBC_VERSION` used with `SQLSetEnvAttr`",23,{"inputs":[],"output":{"name":"odbcversion"}}],[18,"HANDLE_TYPE","","Used to identify the type of the handle in various functions of the ODBC C interface",21,null],[11,"disconnect","","When an application has finished using a data source, it calls `disconnect`. `disconnect` disconnects the driver from the data source.",24,{"inputs":[{"name":"self"}],"output":{"generics":["datasource","connection"],"name":"return"}}],[11,"is_read_only","","`true` if the data source is set to READ ONLY mode, `false` otherwise.",24,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"return"}}]],"paths":[[3,"DiagResult"],[4,"DataType"],[4,"Indicator"],[4,"Return"],[4,"ReturnOption"],[3,"NoVersion"],[3,"Odbc3"],[3,"Odbc3m8"],[3,"Environment"],[3,"Connected"],[3,"Unconnected"],[3,"DataSource"],[3,"Statement"],[4,"Open"],[4,"NoCursor"],[4,"Positioned"],[4,"Prepared"],[4,"Unprepared"],[8,"CDataType"],[8,"HDbcWrapper"],[8,"Diagnostics"],[8,"Handle"],[8,"SqlStr"],[8,"Version"],[6,"Connection"]]};
searchIndex["odbc_sys"] = {"doc":"ODBC types those representation is compatible with the ODBC C API.","items":[[4,"SQLRETURN","odbc_sys","Indicates the overall success or failure of the function",null,null],[13,"SQL_INVALID_HANDLE","","Function failed due to an invalid environment, connection, statement, or descriptor handle",0,null],[13,"SQL_ERROR","","Function failed",0,null],[13,"SQL_SUCCESS","","Function completed successfully",0,null],[13,"SQL_SUCCESS_WITH_INFO","","Function completed successfully, possibly with a nonfatal error (warning)",0,null],[13,"SQL_STILL_EXECUTING","","A function that was started asynchronously is still executing",0,null],[13,"SQL_NEED_DATA","","More data is needed",0,null],[13,"SQL_NO_DATA","","No more data was available",0,null],[13,"SQL_PARAM_DATA_AVAILABLE","","",0,null],[4,"InfoType","","Information requested by SQLGetInfo",null,null],[13,"SQL_MAX_DRIVER_CONNECTIONS","","",1,null],[13,"SQL_MAX_CONCURRENT_ACTIVITIES","","",1,null],[13,"SQL_DATA_SOURCE_NAME","","",1,null],[13,"SQL_SERVER_NAME","","",1,null],[13,"SQL_SEARCH_PATTERN_ESCAPE","","",1,null],[13,"SQL_DBMS_NAME","","",1,null],[13,"SQL_DBMS_VER","","",1,null],[13,"SQL_ACCESSIBLE_TABLES","","",1,null],[13,"SQL_ACCESSIBLE_PROCEDURES","","",1,null],[13,"SQL_CURSOR_COMMIT_BEHAVIOR","","",1,null],[13,"SQL_DATA_SOURCE_READ_ONLY","","",1,null],[13,"SQL_DEFAULT_TXN_ISOLATION","","",1,null],[13,"SQL_IDENTIFIER_CASE","","",1,null],[13,"SQL_IDENTIFIER_QUOTE_CHAR","","",1,null],[13,"SQL_MAX_COLUMN_NAME_LEN","","",1,null],[13,"SQL_MAX_CURSOR_NAME_LEN","","",1,null],[13,"SQL_MAX_SCHEMA_NAME_LEN","","",1,null],[13,"SQL_MAX_CATALOG_NAME_LEN","","",1,null],[13,"SQL_MAX_TABLE_NAME_LEN","","",1,null],[13,"SQL_TRANSACTION_CAPABLE","","",1,null],[13,"SQL_USER_NAME","","",1,null],[13,"SQL_TRANSACTION_ISOLATION_OPTION","","",1,null],[13,"SQL_INTEGRITY","","",1,null],[13,"SQL_GETDATA_EXTENSIONS","","",1,null],[13,"SQL_NULL_COLLATION","","",1,null],[13,"SQL_ALTER_TABLE","","",1,null],[13,"SQL_ORDER_BY_COLUMNS_IN_SELECT","","",1,null],[13,"SQL_SPECIAL_CHARACTERS","","",1,null],[13,"SQL_MAX_COLUMNS_IN_GROUP_BY","","",1,null],[13,"SQL_MAX_COLUMNS_IN_INDEX","","",1,null],[13,"SQL_MAX_COLUMNS_IN_ORDER_BY","","",1,null],[13,"SQL_MAX_COLUMNS_IN_SELECT","","",1,null],[13,"SQL_MAX_COLUMNS_IN_TABLE","","",1,null],[13,"SQL_MAX_INDEX_SIZE","","",1,null],[13,"SQL_MAX_ROW_SIZE","","",1,null],[13,"SQL_MAX_STATEMENT_LEN","","",1,null],[13,"SQL_MAX_TABLES_IN_SELECT","","",1,null],[13,"SQL_MAX_USER_NAME_LEN","","",1,null],[13,"SQL_OUTER_JOIN_CAPABILITIES","","",1,null],[13,"SQL_XOPEN_CLI_YEAR","","",1,null],[13,"SQL_CURSOR_SENSITIVITY","","",1,null],[13,"SQL_DESCRIBE_PARAMETER","","",1,null],[13,"SQL_CATALOG_NAME","","",1,null],[13,"SQL_COLLATION_SEQ","","",1,null],[13,"SQL_MAX_IDENTIFIER_LEN","","",1,null],[4,"FetchOrientation","","Codes used for FetchOrientation in `SQLFetchScroll`, `SQLDataSources` and in `SQLDrivers`",null,null],[13,"SQL_FETCH_NEXT","","",2,null],[13,"SQL_FETCH_FIRST","","",2,null],[13,"SQL_FETCH_LAST","","",2,null],[13,"SQL_FETCH_PRIOR","","",2,null],[13,"SQL_FETCH_ABSOLUTE","","",2,null],[13,"SQL_FETCH_RELATIVE","","",2,null],[13,"SQL_FETCH_FIRST_USER","","",2,null],[13,"SQL_FETCH_FIRST_SYSTEM","","",2,null],[4,"EnvironmentAttribute","","Governs behaviour of EnvironmentAttribute",null,null],[13,"SQL_ATTR_ODBC_VERSION","","",3,null],[13,"SQL_ATTR_CONNECTION_POOLING","","",3,null],[13,"SQL_ATTR_CP_MATCH","","",3,null],[13,"SQL_ATTR_APPLICATION_KEY","","",3,null],[13,"SQL_ATTR_OUTPUT_NTS","","",3,null],[4,"OdbcVersion","","ODBC verions",null,null],[13,"SQL_OV_ODBC2","","",4,null],[13,"SQL_OV_ODBC3","","",4,null],[13,"SQL_OV_ODBC3_80","","",4,null],[4,"SqlCDataType","","The C data type is specified in the SQLBindCol and SQLGetData functions with the TargetType argument and in the SQLBindParameter function with the ValueType argument.",null,null],[13,"SQL_C_UTINYINT","","",5,null],[13,"SQL_C_UBIGINT","","",5,null],[13,"SQL_C_STINYINT","","",5,null],[13,"SQL_C_SBIGINT","","",5,null],[13,"SQL_C_ULONG","","",5,null],[13,"SQL_C_USHORT","","",5,null],[13,"SQL_C_SLONG","","",5,null],[13,"SQL_C_SSHORT","","",5,null],[13,"SQL_C_GUID","","",5,null],[13,"SQL_C_WCHAR","","",5,null],[13,"SQL_C_BIT","","",5,null],[13,"SQL_C_BINARY","","",5,null],[13,"SQL_C_CHAR","","`SQLCHAR` - CHAR, VARCHAR, DECIMAL, NUMERIC",5,null],[13,"SQL_C_NUMERIC","","",5,null],[13,"SQL_C_FLOAT","","",5,null],[13,"SQL_C_DOUBLE","","",5,null],[13,"SQL_C_DATE","","",5,null],[13,"SQL_C_TIME","","",5,null],[13,"SQL_C_TIMESTAMP","","",5,null],[13,"SQL_C_TYPE_DATE","","",5,null],[13,"SQL_C_TYPE_TIME","","",5,null],[13,"SQL_C_TYPE_TIMESTAMP","","",5,null],[13,"SQL_C_DEFAULT","","",5,null],[13,"SQL_C_INTERVAL_YEAR","","",5,null],[13,"SQL_C_INTERVAL_MONTH","","",5,null],[13,"SQL_C_INTERVAL_DAY","","",5,null],[13,"SQL_C_INTERVAL_HOUR","","",5,null],[13,"SQL_C_INTERVAL_MINUTE","","",5,null],[13,"SQL_C_INTERVAL_SECOND","","",5,null],[13,"SQL_C_INTERVAL_YEAR_TO_MONTH","","",5,null],[13,"SQL_C_INTERVAL_DAY_TO_HOUR","","",5,null],[13,"SQL_C_INTERVAL_DAY_TO_MINUTE","","",5,null],[13,"SQL_C_INTERVAL_DAY_TO_SECOND","","",5,null],[13,"SQL_C_INTERVAL_HOUR_TO_MINUTE","","",5,null],[13,"SQL_C_INTERVAL_HOUR_TO_SECOND","","",5,null],[13,"SQL_C_INTERVAL_MINUTE_TO_SECOND","","",5,null],[4,"InputOutput","","Used by `SQLBindParameter`.",null,null],[13,"SQL_PARAM_TYPE_UNKNOWN","","",6,null],[13,"SQL_PARAM_INPUT","","",6,null],[13,"SQL_PARAM_INPUT_OUTPUT","","",6,null],[13,"SQL_RESULT_COL","","",6,null],[13,"SQL_PARAM_OUTPUT","","",6,null],[13,"SQL_RETURN_VALUE","","",6,null],[13,"SQL_PARAM_INPUT_OUTPUT_STREAM","","",6,null],[13,"SQL_PARAM_OUTPUT_STREAM","","",6,null],[4,"Nullable","","Used by `SQLDescribeCol`.",null,null],[13,"SQL_NULLABLE_UNKNOWN","","",7,null],[13,"SQL_NULLABLE","","",7,null],[13,"SQL_NO_NULLS","","",7,null],[4,"Obj","","",null,null],[4,"Env","","",null,null],[4,"Dbc","","",null,null],[4,"Stmt","","",null,null],[4,"FreeStmtOption","","SQL Free Statement options",null,null],[13,"SQL_CLOSE","","Closes the cursor associated with StatementHandle (if one was defined) and discards all pending results. The application can reopen this cursor later by executing a SELECT statement again with the same or different parameter values. If no cursor is open, this option has no effect for the application. `SQLCloseCursor` can also be called to close a cursor.",8,null],[13,"SQL_UNBIND","","Sets the `SQL_DESC_COUNT` field of the ARD to 0, releasing all column buffers bound by `SQLBindCol` for the given StatementHandle. This does not unbind the bookmark column; to do that, the `SQL_DESC_DATA_PTR` field of the ARD for the bookmark column is set to NULL. Notice that if this operation is performed on an explicitly allocated descriptor that is shared by more than one statement, the operation will affect the bindings of all statements that share the descriptor.",8,null],[13,"SQL_RESET_PARAMS","","Sets the `SQL_DESC_COUNT` field of the APD to 0, releasing all parameter buffers set by `SQLBindParameter` for the given StatementHandle. If this operation is performed on an explicitly allocated descriptor that is shared by more than one statement, this operation will affect the bindings of all the statements that share the descriptor.",8,null],[4,"SqlDataType","","SQL Data Types",null,null],[13,"SQL_UNKNOWN_TYPE","","",9,null],[13,"SQL_CHAR","","",9,null],[13,"SQL_NUMERIC","","",9,null],[13,"SQL_DECIMAL","","",9,null],[13,"SQL_INTEGER","","",9,null],[13,"SQL_SMALLINT","","",9,null],[13,"SQL_FLOAT","","",9,null],[13,"SQL_REAL","","",9,null],[13,"SQL_DOUBLE","","",9,null],[13,"SQL_DATETIME","","",9,null],[13,"SQL_VARCHAR","","",9,null],[13,"SQL_EXT_LONGVARCHAR","","",9,null],[13,"SQL_EXT_BINARY","","",9,null],[13,"SQL_EXT_VARBINARY","","",9,null],[13,"SQL_EXT_LONGVARBINARY","","",9,null],[13,"SQL_EXT_BIGINT","","",9,null],[13,"SQL_EXT_TINYINT","","",9,null],[13,"SQL_EXT_BIT","","",9,null],[13,"SQL_EXT_GUID","","",9,null],[4,"HandleType","","Represented in C headers as SQLSMALLINT",null,null],[13,"SQL_HANDLE_ENV","","",10,null],[13,"SQL_HANDLE_DBC","","",10,null],[13,"SQL_HANDLE_STMT","","",10,null],[13,"SQL_HANDLE_DESC","","",10,null],[4,"SqlDriverConnectOption","","Options for `SQLDriverConnect`",null,null],[13,"SQL_DRIVER_NOPROMPT","","",11,null],[13,"SQL_DRIVER_COMPLETE","","",11,null],[13,"SQL_DRIVER_PROMPT","","",11,null],[13,"SQL_DRIVER_COMPLETE_REQUIRED","","",11,null],[4,"SqlStatementAttribute","","Statement attributes for `SQLSetStmtAttr`",null,null],[13,"SQL_ATTR_PARAM_BIND_TYPE","","",12,null],[13,"SQL_ATTR_PARAMSET_SIZE","","",12,null],[13,"SQL_ATTR_ROW_BIND_TYPE","","",12,null],[13,"SQL_ATTR_ROW_ARRAY_SIZE","","",12,null],[13,"SQL_ATTR_ROWS_FETCHED_PTR","","",12,null],[4,"SqlConnectionAttribute","","Connection attributes for `SQLSetConnectAttr`",null,null],[13,"SQL_ATTR_ACCESS_MODE","","",13,null],[13,"SQL_ATTR_AUTOCOMMIT","","",13,null],[13,"SQL_ATTR_LOGIN_TIMEOUT","","",13,null],[13,"SQL_ATTR_TRACE","","",13,null],[13,"SQL_ATTR_TRACEFILE","","",13,null],[13,"SQL_ATTR_TRANSLATE_LIB","","",13,null],[13,"SQL_ATTR_TRANSLATE_OPTION","","",13,null],[13,"SQL_ATTR_TXN_ISOLATION","","",13,null],[13,"SQL_ATTR_CURRENT_CATALOG","","",13,null],[13,"SQL_ATTR_ODBC_CURSORS","","",13,null],[13,"SQL_ATTR_QUIET_MODE","","",13,null],[13,"SQL_ATTR_PACKET_SIZE","","",13,null],[13,"SQL_ATTR_CONNECTION_TIMEOUT","","",13,null],[13,"SQL_ATTR_DISCONNECT_BEHAVIOR","","",13,null],[13,"SQL_ATTR_ENLIST_IN_DTC","","",13,null],[13,"SQL_ATTR_ENLIST_IN_XA","","",13,null],[4,"SqlCompletionType","","Completion types for `SQLEndTrans`",null,null],[13,"SQL_COMMIT","","",14,null],[13,"SQL_ROLLBACK","","",14,null],[5,"SQLAllocHandle","","Allocates an environment, connection, statement, or descriptor handle.",null,null],[5,"SQLFreeHandle","","Frees resources associated with a specific environment, connection, statement, or descriptor handle.",null,null],[5,"SQLSetEnvAttr","","Sets attributes that govern aspects of environments",null,null],[5,"SQLDisconnect","","Closes the connection associated with a specific connection handle.",null,null],[5,"SQLGetDiagRec","","Return the current values of multiple fields of a diagnostic record that contains eror, warning, and status information.",null,null],[5,"SQLExecDirect","","Executes a preparable statement, using the current values of the parameter marker variables if any parameters exist in the statement. This is the fastest way to submit an SQL statement for one-time execution",null,null],[5,"SQLNumResultCols","","Returns the number of columns in a result set",null,null],[5,"SQLGetData","","",null,null],[5,"SQLFetch","","SQLFetch fetches the next rowset of data from the result set and returns data for all bound columns.",null,null],[5,"SQLGetInfo","","Returns general information about the driver and data source associated with a connection",null,null],[5,"SQLConnect","","SQLConnect establishes connections to a driver and a data source. The connection handle references storage of all information about the connection to the data source, including status, transaction state, and error information.",null,null],[5,"SQLTables","","Returns the list of table, catalog, or schema names, and table types, stored in a specific data source. The driver returns the information as a result set",null,null],[5,"SQLDataSources","","Returns information about a data source. This function is implemented only by the Driver Manager.",null,null],[5,"SQLDriverConnect","","An alternative to `SQLConnect`. It supports data sources that require more connection information than the three arguments in `SQLConnect`, dialog boxes to prompt the user for all connection information, and data sources that are not defined in the system information",null,null],[5,"SQLDrivers","","Lists driver descriptions and driver attribute keywords. This function is implemented only by the Driver Manager.",null,null],[5,"SQLCloseCursor","","Closes a cursor that has been opened on a statement and discards pending results.",null,null],[5,"SQLBindParameter","","Binds a buffer to a parameter marker in an SQL statement",null,null],[5,"SQLPrepare","","Compiles the statement and generates an access plan.",null,null],[5,"SQLExecute","","Executes a prepared statement, using the current values of the parameter marker variables if any paramater markers exis in the statement.",null,null],[5,"SQLFreeStmt","","Stops processing associated with a specific statement, closes any open cursors associated with the statement, discards pending results, or, optionally, frees all resources associated with the statement handle.",null,null],[5,"SQLBindCol","","Binds application data bufferst to columns in the result set.",null,null],[5,"SQLDescribeCol","","Returns the result descriptor for one column in the result set — column name, type, column size, decimal digits, and nullability.",null,null],[5,"SQLSetStmtAttr","","Sets attributes related to a statement.",null,null],[5,"SQLSetConnectAttr","","Sets attributes that govern aspects of connections.",null,null],[5,"SQLEndTran","","Requests a commit or rollback operation for all active operations on all statements associated with a handle.",null,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"sqlreturn"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"sqlreturn"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"infotype"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"infotype"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"fetchorientation"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"fetchorientation"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"environmentattribute"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"environmentattribute"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"odbcversion"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"odbcversion"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"sqlcdatatype"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"sqlcdatatype"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"inputoutput"}],"output":{"name":"bool"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"inputoutput"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"nullable"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"nullable"}}],[6,"SQLHANDLE","","",null,null],[6,"SQLHENV","","",null,null],[6,"SQLHDBC","","The connection handle references storage of all information about the connection to the data source, including status, transaction state, and error information.",null,null],[6,"SQLHSTMT","","",null,null],[6,"SQLSMALLINT","","",null,null],[6,"SQLUSMALLINT","","",null,null],[6,"SQLINTEGER","","",null,null],[6,"SQLUINTEGER","","",null,null],[6,"SQLPOINTER","","",null,null],[6,"SQLCHAR","","",null,null],[6,"SQLLEN","","",null,null],[6,"SQLULEN","","",null,null],[6,"SQLHWND","","",null,null],[17,"SQL_NTS","","",null,null],[17,"SQL_NTSL","","",null,null],[17,"SQL_MAX_MESSAGE_LENGTH","","Maximum message length",null,null],[17,"SQL_SQLSTATE_SIZE","","",null,null],[17,"SQL_NULL_DATA","","",null,null],[17,"SQL_NO_TOTAL","","",null,null],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"freestmtoption"}],"output":{"name":"bool"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"freestmtoption"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"sqldatatype"}],"output":{"name":"bool"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"sqldatatype"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"handletype"}],"output":{"name":"bool"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"handletype"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"sqldriverconnectoption"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"sqldriverconnectoption"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"sqlstatementattribute"}],"output":{"name":"bool"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"sqlstatementattribute"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"sqlconnectionattribute"}],"output":{"name":"bool"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"sqlconnectionattribute"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"sqlcompletiontype"}],"output":{"name":"bool"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"sqlcompletiontype"}}]],"paths":[[4,"SQLRETURN"],[4,"InfoType"],[4,"FetchOrientation"],[4,"EnvironmentAttribute"],[4,"OdbcVersion"],[4,"SqlCDataType"],[4,"InputOutput"],[4,"Nullable"],[4,"FreeStmtOption"],[4,"SqlDataType"],[4,"HandleType"],[4,"SqlDriverConnectOption"],[4,"SqlStatementAttribute"],[4,"SqlConnectionAttribute"],[4,"SqlCompletionType"]]};
initSearch(searchIndex);
